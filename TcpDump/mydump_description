Homework 2: Programming using libcap

My program mydump.c is written such that it will print the timestamp, IP version of the packet, type of the packet(TCP,UDP,ICMP,ARP for all packets other than these UNKNOWN is printed), source and destination MAC address, EtherType, source and destination IP, packet length,TCP flags(if the packet is TCP ) and the raw content of the application-layer packet payload as shown below:

Mon Jul  8 22:10:01 2013 f8:c0:1:7b:4d:d3 -> 0:26:b0:ec:ce:28  IPv4 TCP 128.208.2.180.80 -> 128.208.4.212.56192 len 68    Flag: TH_PUSH   Flag: TH_ACK	Payload (16 bytes):
80 03 00 07 00 00 00 08 00 00 00 0f 00 00 00 00    ................


My main() function will parse the arguments using int getopt(int argc, char * const argv[],const char *optstring) function and will call pcap_loop.

1) I created call back function is my_callback(), which will in the payload for a given string pattern and only call packet_info() when a     string exists in packet payload else it will simply return . 

2) The packet_info() is used to print out information for each packet. 


3)get_payload() uses print_hex() to print out payload.

4) print_hex() is actually used to print the payload which uses isprint method to print all the printable characters and '.' for non printable ones.

I searched lot of websites for this homework and beloware the links: 
	1. http://www.tcpdump.org/pcap.html
        2.http://homes.di.unimi.it/~gfp/SiRe/2002-03/progetti/libpcap-tutorial.html

I used three pcap files HTTP_SampleB.pcap, hw1.pcap and test.pcap.Below are the sample outputs.(couldn't place entire output due to space constraint)

1) When interface and  pcap are null. I had to run as a root user to get the below output.

command: sudo -i (for root user)
command: ./mydump -i  wlp13s0
Mydump parameters:
interface: wlp13s0	file: (null)	string: (null)	http sniffer mode: falseexpression: (null)


Sat Mar 12 00:13:02 2016 c8:ff:28:7d:4:70 -> b8:af:67:63:a3:28  IPv4 UDP 172.24.16.175.46059 -> 130.245.255.4.53 len 62 Payload (34 bytes):
b7 56 01 00 00 01 00 00 00 00 00 00 05 73 74 61    .V...........sta
72 74 06 75 62 75 6e 74 75 03 63 6f 6d 00 00 01    rt.ubuntu.com...
00 01                                               ..

Sat Mar 12 00:13:02 2016 c8:ff:28:7d:4:70 -> b8:af:67:63:a3:28  IPv4 UDP 172.24.16.175.18105 -> 130.245.255.4.53 len 62 Payload (34 bytes):
12 f0 01 00 00 01 00 00 00 00 00 00 05 73 74 61    .............sta
72 74 06 75 62 75 6e 74 75 03 63 6f 6d 00 00 1c    rt.ubuntu.com...
00 01                                               ..

Sat Mar 12 00:13:02 2016 b8:af:67:63:a3:28 -> c8:ff:28:7d:4:70  IPv4 UDP 130.245.255.4.53 -> 172.24.16.175.46059 len 126 Payload (98 bytes):
b7 56 81 80 00 01 00 04 00 00 00 00 05 73 74 61    .V...........sta
72 74 06 75 62 75 6e 74 75 03 63 6f 6d 00 00 01    rt.ubuntu.com...
00 01 c0 0c 00 01 00 01 00 00 00 85 00 04 5b bd    ..............[.
5a 28 c0 0c 00 01 00 01 00 00 00 85 00 04 5b bd    Z(............[.
59 58 c0 0c 00 01 00 01 00 00 00 85 00 04 5b bd    YX............[.
5a 29 c0 0c 00 01 00 01 00 00 00 85 00 04 5b bd    Z)............[.
59 f0                                               Y.



2) When only pcap file is given

Command:./mydump -r HTTP_SampleB.pcap 


Mydump parameters:
interface: (null)	file: HTTP_SampleB.pcap	string: (null)	http sniffer mode: false	expression: (null)


Mon Jul  8 22:10:00 2013 0:26:b0:ec:ce:28 -> 0:0:5e:0:1:1  IPv4 TCP 128.208.4.212.56192 -> 128.208.2.180.80 len 64    Flag: TH_SYN
Mon Jul  8 22:10:00 2013 f8:c0:1:7b:4d:d3 -> 0:26:b0:ec:ce:28  IPv4 TCP 128.208.2.180.80 -> 128.208.4.212.56192 len 60    Flag: TH_SYN   Flag: TH_ACK
Mon Jul  8 22:10:00 2013 0:26:b0:ec:ce:28 -> 0:0:5e:0:1:1  IPv4 TCP 128.208.4.212.56192 -> 128.208.2.180.80 len 52    Flag: TH_ACK
Mon Jul  8 22:10:00 2013 0:26:b0:ec:ce:28 -> 0:0:5e:0:1:1  IPv4 TCP 128.208.4.212.56192 -> 128.208.2.180.80 len 72    Flag: TH_PUSH   Flag: TH_ACK	Payload (20 bytes):
80 03 00 04 00 00 00 0c 00 00 00 01 01 00 00 07    ................
00 a0 00 00                                         ....

Mon Jul  8 22:10:00 2013 f8:c0:1:7b:4d:d3 -> 0:26:b0:ec:ce:28  IPv4 TCP 128.208.2.180.80 -> 128.208.4.212.56192 len 52    Flag: TH_ACK
Mon Jul  8 22:10:00 2013 f8:c0:1:7b:4d:d3 -> 0:26:b0:ec:ce:28  IPv4 TCP 128.208.2.180.80 -> 128.208.4.212.56192 len 72    Flag: TH_PUSH   Flag: TH_ACK	Payload (20 bytes):
80 03 00 04 00 00 00 0c 00 00 00 01 00 00 00 04    ................
00 00 00 64                                         ...d



3) When both interface and pcap file are given
Command: ./mydump -i wlp13s0  -r HTTP_SampleB.pcap
 
Mydump parameters:
interface: wlp13s0	file: HTTP_SampleB.pcap	string: (null)	http sniffer mode: false	expression: (null)
You cannot use interface and file!



4) String Matching

Command:./mydump -r hw1.pcap -s "NOTIFY"

Mydump parameters:
interface: (null)	file: hw1.pcap	string: NOTIFY	http sniffer mode: false	expression: (null)

Sun Jan 13 12:23:13 2013 c4:3d:c7:17:6f:9b -> 1:0:5e:7f:ff:fa  IPv4 UDP 192.168.0.1.1900 -> 239.255.255.250.1900 len 381 Payload (353 bytes):
4e 4f 54 49 46 59 20 2a 20 48 54 54 50 2f 31 2e    NOTIFY * HTTP/1.
31 0d 0a 48 6f 73 74 3a 20 32 33 39 2e 32 35 35    1..Host: 239.255
2e 32 35 35 2e 32 35 30 3a 31 39 30 30 0d 0a 43    .255.250:1900..C
61 63 68 65 2d 43 6f 6e 74 72 6f 6c 3a 20 6d 61    ache-Control: ma
78 2d 61 67 65 3d 36 30 0d 0a 4c 6f 63 61 74 69    x-age=60..Locati
6f 6e 3a 20 68 74 74 70 3a 2f 2f 31 39 32 2e 31    on: http://192.1
36 38 2e 30 2e 31 3a 31 39 30 30 2f 57 46 41 44    68.0.1:1900/WFAD
65 76 69 63 65 2e 78 6d 6c 0d 0a 4e 54 53 3a 20    evice.xml..NTS: 
73 73 64 70 3a 61 6c 69 76 65 0d 0a 53 65 72 76    ssdp:alive..Serv
65 72 3a 20 50 4f 53 49 58 2c 20 55 50 6e 50 2f    er: POSIX, UPnP/
31 2e 30 20 42 72 6f 61 64 63 6f 6d 20 55 50 6e    1.0 Broadcom UPn
50 20 53 74 61 63 6b 2f 65 73 74 69 6d 61 74 69    P Stack/estimati
6f 6e 20 31 2e 30 30 0d 0a 4e 54 3a 20 75 72 6e    on 1.00..NT: urn
3a 73 63 68 65 6d 61 73 2d 77 69 66 69 61 6c 6c    :schemas-wifiall
69 61 6e 63 65 2d 6f 72 67 3a 64 65 76 69 63 65    iance-org:device
3a 57 46 41 44 65 76 69 63 65 3a 31 0d 0a 55 53    :WFADevice:1..US
4e 3a 20 75 75 69 64 3a 46 35 31 39 33 39 30 41    N: uuid:F519390A
2d 34 34 44 44 2d 32 39 35 38 2d 36 32 33 37 2d    -44DD-2958-6237-
45 41 33 37 42 39 38 37 43 33 46 44 3a 3a 75 72    EA37B987C3FD::ur
6e 3a 73 63 68 65 6d 61 73 2d 77 69 66 69 61 6c    n:schemas-wifial
6c 69 61 6e 63 65 2d 6f 72 67 3a 64 65 76 69 63    liance-org:devic
65 3a 57 46 41 44 65 76 69 63 65 3a 31 0d 0a 0d    e:WFADevice:1...
0a                                                  .



5) BPF filter output

Command: ./mydump -r hw1.pcap "icmp"

Mydump parameters:
interface: (null)	file: hw1.pcap	string: (null)	http sniffer mode: false	expression: icmp


Mon Jan 14 12:42:31 2013 c4:3d:c7:17:6f:9b -> 0:c:29:e9:94:8e  IPv4 ICMP 1.234.31.20 -> 192.168.0.200 len 76 Payload (48 bytes):
45 00 00 30 00 00 40 00 2e 06 6a 5a c0 a8 00 c8    E..0..@...jZ....
01 ea 1f 14 00 50 7b 81 bd cd 09 c6 3a 35 22 b0    .....P{.....:5".
70 12 39 08 11 ab 00 00 02 04 05 b4 01 01 04 02    p.9.............




6) Also , I am printing enabled TCP flags

Command:./mydump -r hw1.pcap "tcp"(using this command to just show that flags are printed)

Mydump parameters:
interface: (null)	file: hw1.pcap	string: (null)	http sniffer mode: false	expression: tcp

Mon Jan 14 12:48:12 2013 0:c:29:e9:94:8e -> c4:3d:c7:17:6f:9b  IPv4 TCP 192.168.0.200.80 -> 1.234.31.20.52079 len 52    Flag: TH_ACK
Mon Jan 14 12:48:18 2013 c4:3d:c7:17:6f:9b -> 0:c:29:e9:94:8e  IPv4 TCP 1.234.31.20.52079 -> 192.168.0.200.80 len 52    Flag: TH_FIN   Flag: TH_ACK
Mon Jan 14 12:48:18 2013 c4:3d:c7:17:6f:9b -> 0:c:29:e9:94:8e  IPv4 TCP 1.234.31.20.55672 -> 192.168.0.200.80 len 60    Flag: TH_SYN
Mon Jan 14 12:48:18 2013 0:c:29:e9:94:8e -> c4:3d:c7:17:6f:9b  IPv4 TCP 192.168.0.200.80 -> 1.234.31.20.55672 len 60    Flag: TH_SYN   Flag: TH_ACK
Mon Jan 14 12:48:18 2013 0:c:29:e9:94:8e -> c4:3d:c7:17:6f:9b  IPv4 TCP 192.168.0.200.80 -> 1.234.31.20.52079 len 52    Flag: TH_FIN   Flag: TH_ACK
Mon Jan 14 12:48:18 2013 c4:3d:c7:17:6f:9b -> 0:c:29:e9:94:8e  IPv4 TCP 1.234.31.20.55672 -> 192.168.0.200.80 len 52    Flag: TH_ACK
Mon Jan 14 12:48:18 2013 c4:3d:c7:17:6f:9b -> 0:c:29:e9:94:8e  IPv4 TCP 1.234.31.20.55672 -> 192.168.0.200.80 len 219    Flag: TH_PUSH   Flag: TH_ACK	Payload (167 bytes):
47 45 54 20 2f 4d 79 41 64 6d 69 6e 2f 73 63 72    GET /MyAdmin/scr
69 70 74 73 2f 73 65 74 75 70 2e 70 68 70 20 48    ipts/setup.php H
54 54 50 2f 31 2e 31 0d 0a 41 63 63 65 70 74 3a    TTP/1.1..Accept:
20 2a 2f 2a 0d 0a 41 63 63 65 70 74 2d 4c 61 6e     */*..Accept-Lan
67 75 61 67 65 3a 20 65 6e 2d 75 73 0d 0a 41 63    guage: en-us..Ac
63 65 70 74 2d 45 6e 63 6f 64 69 6e 67 3a 20 67    cept-Encoding: g
7a 69 70 2c 20 64 65 66 6c 61 74 65 0d 0a 55 73    zip, deflate..Us
65 72 2d 41 67 65 6e 74 3a 20 5a 6d 45 75 0d 0a    er-Agent: ZmEu..
48 6f 73 74 3a 20 38 36 2e 30 2e 33 33 2e 32 30    Host: 86.0.33.20
0d 0a 43 6f 6e 6e 65 63 74 69 6f 6e 3a 20 43 6c    ..Connection: Cl
6f 73 65 0d 0a 0d 0a                                ose....

7)For -g option, I kept an extra http filter to find out the packets which 
   has GET and POST payload:
   "(tcp port http) && ((tcp[32:4] = 0x47455420) || \
		(tcp[((tcp[12:1] & 0xf0) >> 2):4] = 0x504f5354))";
   

command:
./mydump -g -r hw1.pcap 

Mydump parameters:
interface: (null)	file: hw1.pcap	string: (null)	http sniffer mode: trueexpression: (null)


Sat Jan 12 22:30:48 2013 c4:3d:c7:17:6f:9b -> 0:c:29:e9:94:8e  IPv4 TCP 92.240.68.152.9485 -> 192.168.0.200.80 len 163    Flag: TH_PUSH   Flag: TH_ACK	Payload (111 bytes):
http://pic.leech.it/i/f166c/479246b0asttas.jpg

Sat Jan 12 22:30:49 2013 0:c:29:e9:94:8e -> c4:3d:c7:17:6f:9b  IPv4 TCP 192.168.0.200.40341 -> 87.98.246.8.80 len 215    Flag: TH_PUSH   Flag: TH_ACK	Payload (163 bytes):
/i/f166c/479246b0asttas.jpg

Sat Jan 12 22:31:19 2013 c4:3d:c7:17:6f:9b -> 0:c:29:e9:94:8e  IPv4 TCP 92.240.68.152.17260 -> 192.168.0.200.80 len 193    Flag: TH_PUSH   Flag: TH_ACK	Payload (141 bytes):
http://ecx.images-amazon.com/images/I/41oZ1XsiOAL._SL500_AA300_.jpg

Sat Jan 12 22:31:19 2013 0:c:29:e9:94:8e -> c4:3d:c7:17:6f:9b  IPv4 TCP 192.168.0.200.40630 -> 216.137.63.121.80 len 219    Flag: TH_PUSH   Flag: TH_ACK	Payload (167 bytes):
/images/I/41oZ1XsiOAL.

Sat Jan 12 22:31:50 2013 c4:3d:c7:17:6f:9b -> 0:c:29:e9:94:8e  IPv4 TCP 92.240.68.152.19957 -> 192.168.0.200.80 len 164    Flag: TH_PUSH   Flag: TH_ACK	Payload (112 bytes):
http://images4.byinter.net/DSC442566.gif

